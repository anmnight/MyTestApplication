(function (win, lib) { var doc = win.document,docEl = doc.documentElement,devicePixelRatio = win.devicePixelRatio,dpr = 1, scale = 1; function setViewport() { var isIPhone = /iphone/gi.test(win.navigator.appVersion); dpr = 1; win.devicePixelRatioValue = dpr;scale = 1 / dpr; var hasMetaEl = doc.querySelector('meta[name="viewport"]'); if (hasMetaEl) { if (isIPhone) { hasMetaEl.setAttribute('content', 'width=device-width, initial-scale=' + scale + ', user-scalable=no'); }else { hasMetaEl.setAttribute('content', 'width=device-width, initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no'); } } else { var metaEl = doc.createElement('meta'); metaEl.setAttribute('name', 'viewport'); if (isIPhone) { metaEl.setAttribute('content', 'width=device-width, initial-scale=' + scale + ', user-scalable=no'); }else { metaEl.setAttribute('content', 'width=device-width, initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no'); } if (docEl.firstElementChild) { docEl.firstElementChild.appendChild(metaEl); }else { var wrap = doc.createElement('div'); wrap.appendChild(metaEl); doc.write(wrap.innerHTML); } } }setViewport(); var newBase = 100; function setRem() { var layoutView;if (lib.maxWidth) { layoutView = Math.min(docEl.getBoundingClientRect().width, lib.maxWidth * dpr); }else { layoutView = docEl.getBoundingClientRect().width; }newBase = 100 * layoutView / lib.desinWidth;docEl.style.fontSize = newBase + 'px'; doc.body&&(doc.body.style.fontSize = lib.baseFont / 100 + 'rem'); lib.setRemCallback&&lib.setRemCallback(); } var tid; lib.desinWidth = 640; lib.baseFont = 24; lib.reflow = function() { docEl.clientWidth; }; lib.init = function () { win.addEventListener('resize', function () { clearTimeout(tid); tid = setTimeout(setRem, 300); }, false); win.addEventListener('pageshow', function (e) { if (e.persisted) { clearTimeout(tid); tid = setTimeout(setRem, 300); } }, false); if (doc.readyState === 'complete') { doc.body.style.fontSize = lib.baseFont / 100 + 'rem'; }else { doc.addEventListener('DOMContentLoaded', function (e) { doc.body.style.fontSize = lib.baseFont / 100 + 'rem'; }, false); }setRem();docEl.setAttribute('data-dpr', dpr); };lib.remToPx = function (remValue) { return remValue * newBase; };})(window, window['adaptive'] || (window['adaptive'] = {}));
